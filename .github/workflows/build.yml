name: build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        compiler: [gcc, clang]
        buildtool: [autotools, cmake]

    steps:
    - uses: actions/checkout@v2
    - name: Linux setup
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install \
          g++-8 \
          autoconf \
          automake \
          autotools-dev \
          libtool \
          pkg-config \
          libcunit1-dev \
          libssl-dev \
          libev-dev \
          cmake \
          cmake-data
    - name: MacOS setup
      if: runner.os == 'macOS'
      run: |
        brew install libev cunit autoconf automake pkg-config libtool
    - name: Setup clang
      if: matrix.compiler == 'clang'
      run: |
        echo 'CC=clang' >> $GITHUB_ENV
        echo 'CXX=clang++' >> $GITHUB_ENV
    - name: Setup gcc
      if: runner.os == 'Linux' && matrix.compiler == 'gcc'
      run: |
        echo 'CC=gcc-8' >> $GITHUB_ENV
        echo 'CXX=g++-8' >> $GITHUB_ENV
    - name: Build OpenSSL
      run: |
        ./ci/build_openssl.sh
    - name: Build nghttp3
      run: |
        ./ci/build_nghttp3.sh
    - name: Setup environment variables
      run: |
        PKG_CONFIG_PATH="$PWD/../openssl/build/lib/pkgconfig:$PWD/../nghttp3/build/lib/pkgconfig"
        LDFLAGS="$EXTRA_LDFLAGS -Wl,-rpath,$PWD/../openssl/build/lib"

        echo 'PKG_CONFIG_PATH='"$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo 'LDFLAGS='"$LDFLAGS" >> $GITHUB_ENV
    - name: Configure autotools
      if: matrix.buildtool == 'autotools'
      run: |
        autoreconf -i && ./configure --enable-werror
    - name: Configure cmake
      if: matrix.buildtool == 'cmake'
      run: |
        cmake $CMAKE_OPTS .
    - name: Build ngtcp2
      run: |
        make
        make check
    - name: Integration test
      run: |
        ./ci/gen-certificate.sh
        ./examples/server localhost 4433 cert/server.key cert/server.crt &
        ./examples/client localhost 4433 https://localhost/
